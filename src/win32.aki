# Simple Win32 window example (not working yet, needs refactor)

class WINFUNCTYPE{
    hwnd:u32,
    msg:u32,
    wParam:u32,
    lParam:u32
}

class WNDCLASSEX {
    cbSize:u32,
    style:u32,
    lpfnWndProc: ptr ptr_size,
    #lpfnWndProc: func(ptr u8),   
    cbClsExtra:i32,
    cbWndExtra:i32,
    hInstance:i32,
    hIcon:i32,
    hCursor:i32,
    hbrBackground:i32,
    lpszMenuName:ptr i8,
    lpszClassName:ptr i8,
    hIconSm:i32
}

extern RegisterClassExA (klass:ptr WNDCLASSEX):u32

extern CreateWindowExA(exstyle:i32, classname:ptr WNDCLASSEX, windowname:ptr i8,
    params:i32, x:i32 , y:i32 ,w:i32, h:i32,
    parent:i32, menu:i32,instance:i32,lparam:i32):i32

extern GetModuleHandleA(n:i32):i32

def main() {
    var 
        handle:i32 = 0,
        x:i32=0,
        wndclass:WNDCLASSEX,
        s:ptr WNDCLASSEX

        s = c_ref(wndclass)

        wndclass.cbSize=cast(c_size(wndclass),u32)
        wndclass.style = 3

        var cls_atom = RegisterClassExA(c_ref(wndclass))
        
        print ("Atom:")
        print (cls_atom)

        handle = GetModuleHandleA(0)

        print ("Handle")
        print(handle)
        print ("Size")
        print(wndclass.cbSize) 
        x=CreateWindowExA(0,s,c_data('Hi'), 282001408,0,0,600,800,0,0,handle,0)
        print ("Window handle")
        print(x)
        inkey()
        0
    }