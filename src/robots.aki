class Player {
    x:i32,
    y:i32
}

class Robot{
    x:i32,
    y:i32,
    killed:bool
}

const {
    WIDTH=40,
    HEIGHT=20,
    FIELD_SIZE = (WIDTH+1)*HEIGHT
    FENCE = 177B
    WALL = 219B
    ROBOTS = 10
}

uni {
    field:byte[WIDTH,HEIGHT],
    display:byte[FIELD_SIZE],
    player:Player,
    robots:Robot[ROBOTS]
}

def show(){
    var dead_robots = 0, z=0

    loop(y=0, y<HEIGHT){
        loop(x=0, x<WIDTH){
            display[z]=(
                if field[x,y]==0B
                    then 32B
                    else field[x,y]
            )
            z+=1
        }
        display[z]=10B
        z+=1
    }

    display[z]=0B

    loop (x=0, x<ROBOTS-1){
        when robots[x].killed then
            dead_robots=dead_robots+1
        else
            display[(robots[x].y*(WIDTH+1))+robots[x].x]=72B
    }

    display[(player.y*(WIDTH+1))+player.x]=232B

    out ("Dead robots: {dead_robots}\n")
    print(c_array_ptr(display))
}

def location(v) {
    rnd(v-4)+2
}

def setup(){

    var nx=0, ny=0

    loop(y=0, y<HEIGHT)
        loop(x=0, x<WIDTH)
            field[x,y]=0B

    loop (x=0, x<HEIGHT){
        field[0,x]=WALL
        field[WIDTH-1,x]=WALL
    }
    loop (x=0, x<WIDTH){
        field[x,0]=WALL
        field[x,HEIGHT-1]=WALL
    }

    #Place electrodes

    loop (x=0, x<40){
        loop {
            nx = location(WIDTH)
            ny = location(HEIGHT)
            if field[nx,ny]==0B then break
        }
        field[nx,ny]=FENCE
    }

    # Place robots    
    loop (x=0, x<ROBOTS) {
        var robot = robots[x]
        loop {
            nx = location(WIDTH)
            ny = location(HEIGHT)
            if field[nx,ny]==0B then break
        }
        robot.x=nx
        robot.y=ny
        robot.killed=0b
    }    

    # Place human

    player.x=20
    player.y=10

    0
}

def main(){
    loop {
        setup()
        
        var x:i32,
            xvec, yvec,
            dead=0,
            dead_robots=0

        loop {
            show()
            x=inkey()
            xvec=0
            yvec=0
            #print (x)
            match x {
                71: {yvec=-1 xvec=-1}
                73: {yvec=-1 xvec=1}
                79: {yvec=1 xvec=-1}
                81: {yvec=1 xvec=1}
                72: yvec=-1
                80: yvec=1
                75: xvec=-1
                77: xvec=1
                113: {
                    print ("Quitting (wimp!)")
                    break
                }
                default: continue
            }
            
            var loc = field[player.x+xvec,player.y+yvec]
            match loc {
                FENCE: {
                    print ("FROTZZZZZ\nYou just stepped into an electrified fence.")
                    break
                }
                WALL: {
                    print ("Illegal move")
                    continue
                }
            }

            player.x=player.x+xvec
            player.y=player.y+yvec

            loop (x=0, x<ROBOTS) {
                var robot = robots[x]
                if robot.killed then continue

                if robot.x>player.x then
                    robot.x=robot.x-1
                
                if robot.x<player.x then
                    robot.x=robot.x+1

                if robot.y>player.y then
                    robot.y=robot.y-1
                
                if robot.y<player.y then
                    robot.y=robot.y+1

                if field[robot.x,robot.y] == FENCE then {
                    robot.killed=1b
                    dead_robots=dead_robots+1
                }

                if robot.x==player.x and robot.y==player.y then {
                    print ("FROTZZZZZZ\nYou were killed by a robot.")
                    dead=1
                    break
                }

            }

            if dead_robots == ROBOTS then {
                print ("You win!")
                break
            }
            
            if dead then break
           
        }
        loop {
            print ("Play again? [y/n] > ")
            x=inkey()
            match x {
                121: {x=1 break}
                110: {x=0 break}
                default: continue
            }
        }
        if x==0 then
        {
            print ("Goodbye!")
            break
        }
    }
    return 0
}